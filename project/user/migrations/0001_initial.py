# Generated by Django 5.2.1 on 2025-06-15 19:59

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResearcherProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('institution', models.CharField(max_length=255)),
                ('department', models.CharField(max_length=255)),
                ('position', models.CharField(choices=[('professor', 'Professor'), ('associate_professor', 'Associate Professor'), ('assistant_professor', 'Assistant Professor'), ('lecturer', 'Lecturer'), ('research_fellow', 'Research Fellow'), ('postdoc', 'Post-Doctoral Researcher'), ('phd_student', 'PhD Student'), ('masters_student', 'Masters Student'), ('other', 'Other')], max_length=50)),
                ('bio', models.TextField(blank=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('h_index', models.IntegerField(default=0, help_text='The h-index measures both productivity and citation impact')),
                ('i10_index', models.IntegerField(default=0, help_text='Number of publications with at least 10 citations')),
                ('citation_count', models.IntegerField(default=0, help_text='Total number of citations')),
                ('total_publications', models.IntegerField(default=0)),
                ('research_interests', models.TextField(blank=True, help_text='Comma-separated list of research interests')),
                ('orcid_id', models.CharField(blank=True, help_text='ORCID identifier (e.g., 0000-0002-1825-0097)', max_length=19)),
                ('google_scholar_id', models.CharField(blank=True, max_length=50)),
                ('research_gate_url', models.URLField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='researcher_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResearchPaper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('abstract', models.TextField()),
                ('authors', models.TextField(help_text='Comma-separated list of co-authors')),
                ('document', models.FileField(upload_to='research_papers/')),
                ('category', models.CharField(max_length=100)),
                ('keywords', models.TextField(help_text='Comma-separated list of keywords')),
                ('citation_count', models.IntegerField(default=0)),
                ('predicted_citations', models.IntegerField(default=0, help_text='AI-predicted citation count')),
                ('confidence_score', models.FloatField(default=0.0, help_text='Confidence level of prediction (0-1)')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('under_review', 'Under Review')], default='draft', max_length=20)),
                ('publication_date', models.DateField(blank=True, null=True)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('researcher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='papers', to='user.researcherprofile')),
            ],
        ),
        migrations.CreateModel(
            name='CitationPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('predicted_citations_1y', models.IntegerField(default=0, help_text='Predicted citations in 1 year')),
                ('predicted_citations_3y', models.IntegerField(default=0, help_text='Predicted citations in 3 years')),
                ('predicted_citations_5y', models.IntegerField(default=0, help_text='Predicted citations in 5 years')),
                ('h_index_contribution', models.FloatField(default=0.0, help_text='Predicted contribution to h-index')),
                ('prediction_date', models.DateTimeField(auto_now_add=True)),
                ('author_impact_factor', models.FloatField(default=0.0)),
                ('journal_impact_factor', models.FloatField(blank=True, default=0.0, null=True)),
                ('topic_relevance_score', models.FloatField(default=0.0)),
                ('methodology_score', models.FloatField(default=0.0)),
                ('prediction_explanation', models.TextField(blank=True)),
                ('paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='user.researchpaper')),
            ],
        ),
    ]
